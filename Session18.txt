Functions prepared their functionality ONCE & can be used MANY times. (Reusability of Code)
============================================================================================

1.Non-Functional Programming:
=============================
#include <stdio.h>
int main() 
{
    int n1,n2,result;
    printf("\nEnter n1 and n2 values:");
    scanf("%d%d",&n1,&n2);
    result=n1+n2;
    printf("\nSum is:%d",result);
    printf("\nEnter n1 and n2 values:");
    scanf("%d%d",&n1,&n2);
    result=n1+n2;
    printf("\nSum is:%d",result);
    printf("\nEnter n1 and n2 values:");
    scanf("%d%d",&n1,&n2);
    result=n1+n2;
    printf("\nSum is:%d",result);
    return 0;
}

Drawbacks:
==========
1.More space & time complexcity
2.Duplication of code (No code reusability)
3.No code readability
4.Extensibility of code is difficult
5.Modularity is not achived  (Dividing main program into sub program)




2.Functional Programming:
========================
#include <stdio.h>
#include <conio.h>
int n1,n2,result;
void doadd()
{
    printf("\nEnter n1 and n2 values:");
    scanf("%d%d",&n1,&n2);
    result=n1+n2;
    printf("\nSum is:%d",result);    
}
void main() 
{
	clrscr();
    doadd();
    doadd();
	getch();
}

Common Steps to prepare functional program:
==========================================
1.Load headerfiles
2.Declare your data
3.Prepare Called function
4.Prepare main() function
5.Calling Your function  (Step3)

PS1:Average of 3 numbers			(fun2.c)

#include <stdio.h>
#include <conio.h>
int n1,n2,n3,result;
void  doaverage()
{
	printf("Enter n1,n2 & n3 values:");
	scanf("%d%d%d",&n1,&n2,&n3);
	result=(n1+n2+n3)/3;
	printf("Average is:%d",result);
}
void main()
{
	clrscr();
	doaverage();
	getch();
}

PS2:Find area of circle			(fun3.c)

#include <stdio.h>
#include <conio.h>
float radius,result;
void printarea()
{
	printf("Enter radius value:");
	scanf("%f",%radius);
	result=3.14*radius*radius;
	printf("Area of circle is:%f",result);
}
void main()
{
	clrscr();
	printarea();
	getch();
}


fun4.c			Print area of triangle
fun5.c			Print cube of a number
fun6.c			Check given number is even or odd
fun7.c			Check given number is positive or negative
=========================================================================

								Output Type			FunctionName			Input list		
		
R1:Addition of 2 numbers		float				showadd()	